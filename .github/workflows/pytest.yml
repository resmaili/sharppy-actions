name: pytest

on:
  push:
  #   branches: [ main ]
  # pull_request:
  #   branches: [ main ]
  # schedule:
  #   - cron: '0 0 * * *'

jobs:
  build:
    defaults:
      run:
        shell: bash -l {0}

    # Control the os/python builds
    strategy:
      matrix:
        python-version: [3.8]
        os: [windows-latest]
        # include:
          # - os: [macos-latest, ubuntu-latest, windows-latest]

    name: ${{ matrix.os }} x Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}

    steps:

    - name: EQUIV check ${{runner.os}} x ${{ inputs.python-version}}
      shell: bash -l {0}
      run: |
        OS=${{runner.os}}
        echo ${OS:0:3}
        if [[ "${OS:0:3}" == "mac" ]]; then
          echo "pyinstaller SHARPpy-mac-64.spec --log-level DEBUG"
        elif [[ "${OS:0:3}" == "Win" ]]; then
          echo "pyinstaller SHARPpy-win7-64.spec --log-level DEBUG"
        else
          echo "Linux"
        fi

    # - name: Checkout source
    #   uses: actions/checkout@v3
    #   with:
    #     fetch-depth: 100
    #
    #   # Installs environment
    # - name: Install conda and environment
    #   uses: ./.github/actions/install-conda
    #   with:
    #     python-version: ${{ matrix.python-version }}
    #
    # - name: Run sharppy build
    #   uses: ./.github/actions/run-build
    #   # with:
    #   #   python-version: ${{ matrix.python-version }}
    #
    # - name: Run sharppy release
    #   uses: ./.github/actions/run-release
    #   with:
    #     repo-token: ${{ secrets.GITHUB_TOKEN }}

    # Unused --------------------------
    # - name: EQUIV check ${{runner.os}} x ${{ inputs.python-version}}
    #   shell: bash -l {0}
    #   run: |
    #     OS=${{runner.os}}
    #     echo ${OS:0:3}
    #     if [[ "${OS:0:3}" == "mac" ]]; then
    #       echo "pyinstaller SHARPpy-mac-64.spec --log-level DEBUG"
    #     elif [[ "${OS:0:3}" == "Win" ]]; then
    #       echo "pyinstaller SHARPpy-win7-64.spec --log-level DEBUG"
    #     else
    #       echo "Linux"
    #     fi

    # - name: Checkout cache
    #   uses: actions/cache@v3
    #   with:
    #     path: ~/conda_pkgs_dir
    #     # path: ${{ env.pythonLocation }}
    #     key: conda-${{ runner.os }}-${{ inputs.python-version}}-${{ hashFiles('environment.yml') }}
    #   id: cache

    # if: ${{ steps.cache.outputs.cache-hit != 'true' }}
